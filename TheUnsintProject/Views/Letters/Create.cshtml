@model Letter

@{
    ViewData["Title"] = "Create";
}

<h1 class="text-center mt-5">Submit a Post</h1>

<div class="row d-flex justify-content-center">
    <div class="col-md-6">
        <form asp-action="Create">
            <div class="row">
                <div class="col-7 mt-3 py-1 px-3">
                    <div class="bg-black p-1">
                        <div class="bg-white">
                            <div class="row text-center">
                                <div class="col-2">ABC</div>
                                <div class="col-2">To: </div>
                                <input asp-for="Name" placeholder="Enter Name" class="col-6 bg-transparent" />
                                <div class="col-2"></div>
                            </div>
                            <div>
                                <div class="bg-black m-2" style="height: 20rem;" id="letterMessage">
                                    <input asp-for="Name" placeholder="Enter Your Message Here..."
                                        class="form-control bg-transparent"/>
                                </div>
                            </div>
                            <div class="row text-center">
                                <div class="col-2">Send</div>
                                <div class="col-8">#unsintproject</div>
                                <div class="col-2">Back</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-5 row g-2 p-1 mb-1" style="height: 30rem; width: 15rem">
                    @{
                        foreach (var color in Enum.GetValues(typeof(LetterColor)))
                        {
                            var bgColor = color.ToString()!
                                .ToLower()
                                .Replace("_", "");

                            <div class="col-3">
                                <div class="bg-black p-1 color-card" style="width:95%;">
                                    <div class="bg-@bgColor color-card  card-button" 
                                        id="card-@bgColor" title="@bgColor" data-color="@bgColor"></div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    var cards = document.querySelectorAll('.card-button')
        .forEach(function (card) {
            card.addEventListener('click', function () {
                var selectedColor = $(this).data('color');

                $('#letterMessage')
                    .removeClass(function (index, className) {
                        return (className.match(/(^|\s)bg\S+/g) || []).join(' ');
                });

                $('#letterMessage')
                    .addClass(`bg-${selectedColor}`);
                    console.log(`bg-${selectedColor}`);

                var bgColor = $('#letterMessage').css('background-color');
                var textColor = getContrastColor(bgColor);

                // Set the input text color
                $('#letterMessage input').css('color', textColor);
            });
        });

        function getContrastColor(color) {
            // Convert color to RGB values
            var rgb = color.match(/\d+/g);
            var brightness = (parseInt(rgb[0]) * 299 + parseInt(rgb[1]) * 587 + parseInt(rgb[2]) * 114) / 1000;
        
            // Determine contrast color
            return brightness > 128 ? 'black' : 'white';
        }
</script>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}