@model PaginatedList<Letter>

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex align-items-center justify-content-center mt-5">
    <h1 class="title p-5" id="title"></h1>
</div>

<form method="get">
    <div class="row d-flex justify-content-center">
        <div class="col-10 d-flex justify-content-center">
            <input type="text" class="form-control m-4" name="q" placeholder="Search for a name..." />
            <button class="btn btn-outline-secondary m-4 px-4" type="submit">Filter</button>
        </div>
    </div>
</form>

<div class="row g-4" id="letterList">
    @foreach (var item in Model)
    {
        @await Html.PartialAsync("_Letter", item)
    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : string.Empty;
    var nextDisabled = !Model.HasNextPage ? "disabled" : string.Empty;
}
<nav>
    <ul class="pagination justify-content-center">
        <li class="page-item @prevDisabled">
            <a class="page-link" asp-route-page="@(Model.Page - 1)">Previous</a>
        </li>

        @if (Model.Page > 3)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="1">1</a>
            </li>
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }

        @for (var pageNum = Math.Max(1, Model.Page - 2); pageNum <= Math.Min(Model.TotalPages, Model.Page + 2); pageNum++)
        {
            if (pageNum == Model.Page)
            {
                <li class="page-item active">
                    <span class="page-link">@pageNum</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="@pageNum">@pageNum</a>
                </li>
            }
        }

        @if (Model.Page < Model.TotalPages - 2)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
            <li class="page-item">
                <a class="page-link" asp-route-page="@Model.TotalPages">@Model.TotalPages</a>
            </li>
        }

        <li class="page-item @nextDisabled">
            <a class="page-link" asp-route-page="@(Model.Page + 1)">Next</a>
        </li>
    </ul>
</nav>

<script src="https://unpkg.com/typed.js@2.0.16/dist/typed.umd.js"></script>
<script>
    var typed = new Typed('#title', {
        strings: ['THE UNSINT PROJECT', ' '],
        typeSpeed: 80,
        backSpeed: 80,
        loop: true,
    });
</script>